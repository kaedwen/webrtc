{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/signaling.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { SignalingService } from './services/signaling.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  @ViewChild('video', { static: true, read: ElementRef })\n  public videoElem!: ElementRef<HTMLVideoElement>;\n\n  @ViewChild('audio', { static: true, read: ElementRef })\n  public audioElem!: ElementRef<HTMLAudioElement>;\n\n  @ViewChild('start', { static: true, read: ElementRef })\n  public startElem!: ElementRef<HTMLButtonElement>;\n\n  private readonly pc: RTCPeerConnection;\n\n  constructor(private signaling: SignalingService) {\n    //this.pc = new RTCPeerConnection({iceServers: [{urls: 'stun:stun.l.google.com:19302'}]});\n    this.pc = new RTCPeerConnection();\n\n    // Once remote track media arrives, show it in remote element.\n    this.pc.ontrack = (event) => {\n      const [remoteStream] = event.streams;\n      if (event.track.kind === 'video') {\n        this.videoElem.nativeElement.srcObject = remoteStream;\n        this.videoElem.nativeElement.muted = true;\n        this.videoElem.nativeElement.play();\n      } else if (event.track.kind === 'audio') {\n        this.audioElem.nativeElement.srcObject = remoteStream;\n      }\n    }\n\n    this.pc.oniceconnectionstatechange = (e) => {\n      console.log(e);\n    };\n\n    // Send any ice candidates to the other peer.\n    this.pc.onicecandidate = ({candidate}) => {\n      console.log(candidate);\n      if (candidate == null) {\n        signaling.next(this.pc.localDescription)\n      }\n    };\n\n    // Offer to receive 1 audio, and 1 video track\n    this.pc.addTransceiver('audio', {direction: 'recvonly'})\n    this.pc.addTransceiver('video', {direction: 'recvonly'})\n    this.pc.createOffer().then(d => this.pc.setLocalDescription(d)).catch((e) => {\n      console.error(e);\n    });\n    \n    // Let the \"negotiationneeded\" event trigger offer generation.\n    this.pc.onnegotiationneeded = async (e) => {\n      console.log(e);\n      // try {\n      //   await this.pc.setLocalDescription();\n      //   // Send the offer to the other peer.\n      //   this.api.send({desc: this.pc.localDescription});\n      // } catch (err) {\n      //   console.error(err);\n      // }\n    };\n\n    this.signaling.subscribe(async (x) => {\n      console.log(x);\n      if (x.type === 'answer') {\n        console.log('Received answer');\n\n        try {\n          // the answer\n          await this.pc.setRemoteDescription(x);\n        } catch(e) {\n          console.error(e);\n        }\n\n      }\n    });\n  }\n\n  public async ngOnInit(): Promise<void> {\n    \n  }\n\n  public run(e: MouseEvent): void {\n    this.videoElem.nativeElement.play();\n  }\n\n}\n","<video #video autoplay muted controls></video>\n<audio #audio autoplay controls></audio>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { SignalingService } from './services/signaling.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n  ],\n  providers: [SignalingService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { WebSocketSubject, WebSocketSubjectConfig } from 'rxjs/webSocket';\nimport { Injectable } from '@angular/core';\nimport { v4 } from 'uuid';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignalingService extends WebSocketSubject<any> {\n  constructor() {\n    const config: WebSocketSubjectConfig<any> = {\n      url: `${location.origin.replace(\"http\", \"ws\")}/signaling/${v4()}`,\n    };\n\n    super(config);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["ElementRef","AppComponent","constructor","signaling","pc","RTCPeerConnection","ontrack","event","remoteStream","streams","track","kind","videoElem","nativeElement","srcObject","muted","play","audioElem","oniceconnectionstatechange","e","console","log","onicecandidate","candidate","next","localDescription","addTransceiver","direction","createOffer","then","d","setLocalDescription","catch","error","onnegotiationneeded","subscribe","x","type","setRemoteDescription","ngOnInit","run","selectors","viewQuery","i0","BrowserModule","HttpClientModule","SignalingService","AppModule","bootstrap","imports","declarations","WebSocketSubject","v4","config","url","location","origin","replace","factory","providedIn","environment","production","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}